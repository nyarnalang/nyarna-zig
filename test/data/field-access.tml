=== Field access
--- input
\declare:
  Data = \Record:
    a, b : \Raw;
  \end(Record)

  foo = \func:
    data : \Data;
  :body:
    (\data::a, \data::b)
  \end(func)
\end(declare)

\foo(\Data(x, y))
--- rawast
+PARA
  +RCALL
    =SYMREF .std.system.declare
    >ARG namespace
    =VOID
    >ARG public
    +AST
      +DEF Data
        +RCALL
          =SYMREF .std.system.Record
          >ARG fields
          +AST
            +LOC
              =LIT text "a"
              =SYMREF .std.system.Raw
            -LOC
            +LOC
              =LIT text "b"
              =SYMREF .std.system.Raw
            -LOC
          -AST
        -RCALL
      -DEF
      +DEF foo
        +RCALL
          =SYMREF .std.system.func
          >ARG return
          =VOID
          >ARG params
          +AST
            +LOC
              =LIT text "data"
              =SYMREF [0]Data
            -LOC
          -AST
          >ARG body
          +AST
            =LIT text "("
            +ACCESS
              +SUBJECT
                =SYMREF [0]data
              -SUBJECT
              =ID "a"
            -ACCESS
            =LIT text ", "
            +ACCESS
              +SUBJECT
                =SYMREF [0]data
              -SUBJECT
              =ID "b"
            -ACCESS
            =LIT text ")"
          -AST
        -RCALL
      -DEF
    -AST
    >ARG private
    =VOID
  -RCALL
-PARA
+PARA
  +UCALL
    +TARGET
      =SYMREF [0]foo
    -TARGET
    +PROTO pos
      +UCALL
        +TARGET
          =SYMREF [0]Data
        -TARGET
        +PROTO pos
          =LIT text "x"
        -PROTO
        +PROTO pos
          =LIT text "y"
        -PROTO
      -UCALL
    -PROTO
  -UCALL
-PARA
--- expr
+CALL
  =FUNCREF .doc.input.foo
  >ARG data
  +CALL
    =TYPE record .doc.input.Data
    >ARG a
    =TEXT Raw "x"
    >ARG b
    =TEXT Raw "y"
  -CALL
-CALL
--- document
=TEXT Raw "(x, y)"