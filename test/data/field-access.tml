=== Field access
--- input
\declare:
  Data = \Record:
    a, b : \Text;
  \end(Record)

  foo = \func:
    data : \Data;
  :body:
    (\data::a, \data::b)
  \end(func)
\end(declare)

\foo(\Data(x, y))
--- rawast
+PARA
  +RCALL
    =SYMREF .std.system.declare
    >ARG namespace
    =VOID
    >ARG public
    +AST
      +DEF Data
        +TYPE record
          +PARAM a
            =TYPE textual .std.system.Text
          -PARAM
          +PARAM b
            =TYPE textual .std.system.Text
          -PARAM
        -TYPE
      -DEF
      +DEF foo
        +FUNC
          +LOC
            =TEXT Literal "data"
            =SYMREF [0]Data
          -LOC
          +BODY
            =LIT text "("
            +ACCESS
              >SUBJECT
              =SYMREF [0]data
              >NAME
              =LIT text "a"
            -ACCESS
            =LIT text ", "
            +ACCESS
              >SUBJECT
              =SYMREF [0]data
              >NAME
              =LIT text "b"
            -ACCESS
            =LIT text ")"
          -BODY
        -FUNC
      -DEF
    -AST
    >ARG private
    =VOID
  -RCALL
-PARA
+PARA
  +UCALL
    +TARGET
      =SYMREF [0]foo
    -TARGET
    +PROTO pos
      +UCALL
        +TARGET
          =SYMREF [0]Data
        -TARGET
        +PROTO pos
          =LIT text "x"
        -PROTO
        +PROTO pos
          =LIT text "y"
        -PROTO
      -UCALL
    -PROTO
  -UCALL
-PARA
--- expr
+CALL
  =FUNCREF .doc.input.foo
  >ARG data
  +CALL
    =TYPE record .doc.input.Data
    >ARG a
    =TEXT Text "x"
    >ARG b
    =TEXT Text "y"
  -CALL
-CALL
--- document
=TEXT Text "(x, y)"