=== Locations syntax
--- input
\block:<syntax locations>
  spam : \Raw
  egg, sausage = \Integer(42); baked : \List(\Text) {varargs};
  beans {primary}= \if(true):
    warbl
  :else:
    wirbl
  \end(if) # comment
  schwurbl : \Boolean {}:<syntax locations>:3>
\end(block)
--- rawast
+UCALL
  +TARGET
    =SYMREF [0]block
  -TARGET
  +PROTO primary
    +RCALL
      =TYPE location
      >ARG name
      =LIT text "spam"
      >ARG type
      =SYMREF <intrinsic>.Raw
      >ARG primary
      =ENUM Boolean "false"
      >ARG varargs
      =ENUM Boolean "false"
      >ARG varmap
      =ENUM Boolean "false"
      >ARG mutable
      =ENUM Boolean "false"
      >ARG header
      =VOID
      >ARG default
      =VOID
    -RCALL
    +RCALL
      =TYPE location
      >ARG name
      =LIT text "egg"
      >ARG type
      =VOID
      >ARG primary
      =ENUM Boolean "false"
      >ARG varargs
      =ENUM Boolean "false"
      >ARG varmap
      =ENUM Boolean "false"
      >ARG mutable
      =ENUM Boolean "false"
      >ARG header
      =VOID
      >ARG default
      +AST
        +UCALL
          +TARGET
            =SYMREF [0]Integer
          -TARGET
          +PROTO pos
            =LIT text "42"
          -PROTO
        -UCALL
      -AST
    -RCALL
    +RCALL
      =TYPE location
      >ARG name
      =LIT text "sausage"
      >ARG type
      =VOID
      >ARG primary
      =ENUM Boolean "false"
      >ARG varargs
      =ENUM Boolean "false"
      >ARG varmap
      =ENUM Boolean "false"
      >ARG mutable
      =ENUM Boolean "false"
      >ARG header
      =VOID
      >ARG default
      +AST
        +UCALL
          +TARGET
            =SYMREF [0]Integer
          -TARGET
          +PROTO pos
            =LIT text "42"
          -PROTO
        -UCALL
      -AST
    -RCALL
    +RCALL
      =TYPE location
      >ARG name
      =LIT text "baked"
      >ARG type
      +UCALL
        +TARGET
          =SYMREF [0]List
        -TARGET
        +PROTO pos
          =SYMREF [0]Text
        -PROTO
      -UCALL
      >ARG primary
      =ENUM Boolean "false"
      >ARG varargs
      =ENUM Boolean "true"
      >ARG varmap
      =ENUM Boolean "false"
      >ARG mutable
      =ENUM Boolean "false"
      >ARG header
      =VOID
      >ARG default
      =VOID
    -RCALL
    +RCALL
      =TYPE location
      >ARG name
      =LIT text "beans"
      >ARG type
      =VOID
      >ARG primary
      =ENUM Boolean "true"
      >ARG varargs
      =ENUM Boolean "false"
      >ARG varmap
      =ENUM Boolean "false"
      >ARG mutable
      =ENUM Boolean "false"
      >ARG header
      =VOID
      >ARG default
      +AST
        +RCALL
          =FUNCREF .std.intrinsic.if
          >ARG condition
          +AST
            =LIT text "true"
          -AST
          >ARG then
          +AST
            =LIT text "warbl"
          -AST
          >ARG else
          +AST
            =LIT text "wirbl"
          -AST
        -RCALL
      -AST
    -RCALL
    +RCALL
      =TYPE location
      >ARG name
      =LIT text "schwurbl"
      >ARG type
      =SYMREF [0]Boolean
      >ARG primary
      =ENUM Boolean "false"
      >ARG varargs
      =ENUM Boolean "false"
      >ARG varmap
      =ENUM Boolean "false"
      >ARG mutable
      =ENUM Boolean "false"
      >ARG header
      =HEADER :<syntax locations>:3>
      >ARG default
      =VOID
    -RCALL
  -PROTO
-UCALL
