=== Invalid end Commands
--- input {strip}
\block:
  \Text:
    Foo
  \end
\end(block)

\block:
  \Integer:
    42
  \end( Int eger )
\end(block)

\if(true):
  2
\end(if
--- tokens
3:1[0] symref
3:7[6] blocks_sep
3:8[7] space
4:1[8] indent
4:3[10] symref
4:8[15] blocks_sep
4:9[16] space
5:1[17] indent
5:5[21] literal
5:8[24] ws_break
6:1[25] indent
6:3[27] invalid_end_command
6:7[31] ws_break
7:1[32] block_end_open
7:6[37] skipping_call_id(1)
7:11[42] list_end
7:12[43] parsep
9:1[45] symref
9:7[51] blocks_sep
9:8[52] space
10:1[53] indent
10:3[55] symref
10:11[63] blocks_sep
10:12[64] space
11:1[65] indent
11:5[69] literal
11:7[71] ws_break
12:1[72] indent
12:3[74] block_end_open
12:8[79] wrong_call_id
12:13[84] literal
12:17[88] space
12:18[89] literal
12:19[90] ws_break
13:1[91] block_end_open
13:6[96] call_id
13:11[101] list_end
13:12[102] parsep
15:1[104] symref
15:4[107] list_start
15:5[108] literal
15:9[112] list_end
15:10[113] blocks_sep
15:11[114] space
16:1[115] indent
16:3[117] literal
16:4[118] ws_break
17:1[119] block_end_open
17:6[124] call_id
17:8[126] ws_break
18:1[127] end_source
--- errors:expr
6:3 - 6:7 InvalidEndCommand
7:6 - 7:11 SkippingCallId
  expected = 'Text'
  got = 'block'
  defined_at = input(4:3)
12:8 - 12:13 WrongCallId
  expected = 'Integer'
  got = 'Int'
  defined_at = input(10:3)
12:13 - 12:13 MissingClosingParenthesis
17:8 - 17:8 MissingClosingParenthesis